// <auto-generated />
using System;
using LadeviVentasApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LadeviVentasApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812130638_TrasactionIdContractAndOrders")]
    partial class TrasactionIdContractAndOrders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.AdvertisingSpaceLocationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AdvertisingSpaceLocationTypes");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ApplicationRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ShouldHaveCommission")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ApplicationRole");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ApplicationUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ApplicationRoleId")
                        .HasColumnType("bigint");

                    b.Property<double>("CommisionCoeficient")
                        .HasColumnType("double precision");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CredentialsUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationRoleId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CredentialsUserId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Auditory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AuditMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Auditory");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.BillingCondition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BillingConditions");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.CheckPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<double>("Total")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("CheckPayments");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CodigoTelefonico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("XubioCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("AlternativeEmail")
                        .HasColumnType("text");

                    b.Property<long>("ApplicationUserDebtCollectorId")
                        .HasColumnType("bigint");

                    b.Property<long>("ApplicationUserSellerId")
                        .HasColumnType("bigint");

                    b.Property<string>("BillingPointOfSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ElectronicBillByMail")
                        .HasColumnType("boolean");

                    b.Property<bool>("ElectronicBillByPaper")
                        .HasColumnType("boolean");

                    b.Property<string>("IdentificationValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAgency")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsBigCompany")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsComtur")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("MainEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TaxCategoryId")
                        .HasColumnType("bigint");

                    b.Property<double>("TaxPercentage")
                        .HasColumnType("double precision");

                    b.Property<long>("TaxTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("TelephoneAreaCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("TelephoneCountryCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<long?>("XubioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserDebtCollectorId");

                    b.HasIndex("ApplicationUserSellerId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("StateId");

                    b.HasIndex("TaxCategoryId");

                    b.HasIndex("TaxTypeId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("ApplyDiscountForCheck")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApplyDiscountForLoyalty")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApplyDiscountForOtherCountry")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApplyDiscountForSameCountry")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApplyDiscountForVolume")
                        .HasColumnType("boolean");

                    b.Property<bool>("AppyDiscountForAgency")
                        .HasColumnType("boolean");

                    b.Property<long>("BillingConditionId")
                        .HasColumnType("bigint");

                    b.Property<long>("BillingCountryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CheckQuantity")
                        .HasColumnType("integer");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<double?>("CurrencyParity")
                        .HasColumnType("double precision");

                    b.Property<int?>("DaysBetweenChecks")
                        .HasColumnType("integer");

                    b.Property<int?>("DaysToFirstPayment")
                        .HasColumnType("integer");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<double?>("DiscountForAgency")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForCheck")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForLoyalty")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForOtherCountry")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForSameCountry")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForVolume")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double?>("IVA")
                        .HasColumnType("double precision");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("PaidOut")
                        .HasColumnType("boolean");

                    b.Property<long>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("SellerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Total")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalDiscounts")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalTaxes")
                        .HasColumnType("double precision");

                    b.Property<bool>("UseEuro")
                        .HasColumnType("boolean");

                    b.Property<long?>("XubioTransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BillingConditionId");

                    b.HasIndex("BillingCountryId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ContractHistorical", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractHistoricals");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CodigoTelefonico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("XubioCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("UseEuro")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.CurrencyParity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("LocalCurrencyToDollarExchangeRate")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyParities");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("District");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.EuroParity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("EuroToDollarExchangeRate")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("EuroParities");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.PaymentMethod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("AliquotForSalesCommission")
                        .HasColumnType("double precision");

                    b.Property<string>("ComturXubioProductCode")
                        .HasColumnType("text");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<double>("DiscountByManager")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountForAgency")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountForCheck")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountForLoyalty")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountForOtherCountry")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountForSameCountry")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountSpecialBySeller")
                        .HasColumnType("double precision");

                    b.Property<double>("IVA")
                        .HasColumnType("double precision");

                    b.Property<double>("MaxAplicableDiscount")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("ProductTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("XubioProductCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductAdvertisingSpace", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<double>("DiscountForAgency")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountForCheck")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountForLoyalty")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountForOtherCountry")
                        .HasColumnType("double precision");

                    b.Property<double>("DiscountForSameCountry")
                        .HasColumnType("double precision");

                    b.Property<double>("DollarPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Show")
                        .HasColumnType("boolean");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAdvertisingSpaces");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductAdvertisingSpaceLocationDiscount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AdvertisingSpaceLocationTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<long>("ProductAdvertisingSpaceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductAdvertisingSpaceId");

                    b.ToTable("ProductAdvertisingSpaceLocationDiscount");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductAdvertisingSpaceVolumeDiscount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<long>("ProductAdvertisingSpaceId")
                        .HasColumnType("bigint");

                    b.Property<long>("RangeEnd")
                        .HasColumnType("bigint");

                    b.Property<long>("RangeStart")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductAdvertisingSpaceId");

                    b.ToTable("ProductAdvertisingSpaceVolumeDiscount");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductCurrencyParity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("LocalCurrencyToDollarExchangeRate")
                        .HasColumnType("double precision");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ProductCurrencyParity");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductEdition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Closed")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductEditions");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductLocationDiscount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AdvertisingSpaceLocationTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductLocationDiscount");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductVolumeDiscount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("RangeEnd")
                        .HasColumnType("bigint");

                    b.Property<long>("RangeStart")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVolumeDiscount");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.PublishingOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AdvertisingSpaceLocationTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Latent")
                        .HasColumnType("boolean");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PageNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("PaidOut")
                        .HasColumnType("boolean");

                    b.Property<long>("ProductAdvertisingSpaceId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductEditionId")
                        .HasColumnType("bigint");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<long>("SellerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SoldSpaceId")
                        .HasColumnType("bigint");

                    b.Property<string>("XubioDocumentNumber")
                        .HasColumnType("text");

                    b.Property<long?>("XubioTransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisingSpaceLocationTypeId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContractId");

                    b.HasIndex("ProductAdvertisingSpaceId");

                    b.HasIndex("ProductEditionId");

                    b.HasIndex("SellerId");

                    b.HasIndex("SoldSpaceId");

                    b.ToTable("PublishingOrders");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.RefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Refreshtoken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Revoked")
                        .HasColumnType("boolean");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ReportOPForProductionExports", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("ProductEditionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ReportOPForProductionExports");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.SoldSpace", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AdvertisingSpaceLocationTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ApplyDiscountForCheck")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApplyDiscountForLoyalty")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApplyDiscountForOtherCountry")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApplyDiscountForSameCountry")
                        .HasColumnType("boolean");

                    b.Property<bool>("ApplyDiscountForVolume")
                        .HasColumnType("boolean");

                    b.Property<bool>("AppyDiscountForAgency")
                        .HasColumnType("boolean");

                    b.Property<double>("Balance")
                        .HasColumnType("double precision");

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("DescriptionGerentialDiscount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DescriptionSpecialDiscount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("DiscountForAgency")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForCheck")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForLoyalty")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForOtherCountry")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForSameCountry")
                        .HasColumnType("double precision");

                    b.Property<double?>("DiscountForVolume")
                        .HasColumnType("double precision");

                    b.Property<double>("GerentialDiscount")
                        .HasColumnType("double precision");

                    b.Property<double>("LocationDiscount")
                        .HasColumnType("double precision");

                    b.Property<long>("ProductAdvertisingSpaceId")
                        .HasColumnType("bigint");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<double>("SpacePrice")
                        .HasColumnType("double precision");

                    b.Property<double>("SpecialDiscount")
                        .HasColumnType("double precision");

                    b.Property<double>("SubTotal")
                        .HasColumnType("double precision");

                    b.Property<double>("Total")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalDiscounts")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalTaxes")
                        .HasColumnType("double precision");

                    b.Property<short>("TypeGerentialDiscount")
                        .HasColumnType("smallint");

                    b.Property<short?>("TypeSpecialDiscount")
                        .HasColumnType("smallint");

                    b.Property<double>("UnitPriceWithDiscounts")
                        .HasColumnType("double precision");

                    b.Property<string>("XubioDocumentNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisingSpaceLocationTypeId");

                    b.HasIndex("ContractId");

                    b.HasIndex("ProductAdvertisingSpaceId");

                    b.ToTable("SoldSpaces");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("XubioCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.TaxCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TaxCategories");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.TaxType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeletedUser")
                        .HasColumnType("text");

                    b.Property<bool>("IsIdentificationField")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OptionsInternal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("TaxType");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ApplicationUser", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.ApplicationRole", "ApplicationRole")
                        .WithMany()
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "CredentialsUser")
                        .WithMany()
                        .HasForeignKey("CredentialsUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationRole");

                    b.Navigation("Country");

                    b.Navigation("CredentialsUser");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.CheckPayment", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Contract", "Contract")
                        .WithMany("CheckPayments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.City", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Client", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.ApplicationUser", "ApplicationUserDebtCollector")
                        .WithMany()
                        .HasForeignKey("ApplicationUserDebtCollectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.ApplicationUser", "ApplicationUserSeller")
                        .WithMany()
                        .HasForeignKey("ApplicationUserSellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("LadeviVentasApi.Models.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("LadeviVentasApi.Models.Domain.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.TaxCategory", "TaxCategory")
                        .WithMany()
                        .HasForeignKey("TaxCategoryId");

                    b.HasOne("LadeviVentasApi.Models.Domain.TaxType", "IdentificationType")
                        .WithMany()
                        .HasForeignKey("TaxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUserDebtCollector");

                    b.Navigation("ApplicationUserSeller");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("IdentificationType");

                    b.Navigation("State");

                    b.Navigation("TaxCategory");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Contract", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.BillingCondition", "BillingCondition")
                        .WithMany()
                        .HasForeignKey("BillingConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.Country", "BillingCountry")
                        .WithMany()
                        .HasForeignKey("BillingCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("LadeviVentasApi.Models.Domain.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.ApplicationUser", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingCondition");

                    b.Navigation("BillingCountry");

                    b.Navigation("Client");

                    b.Navigation("Currency");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ContractHistorical", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Contract", null)
                        .WithMany("ContractHistoricals")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.CurrencyParity", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Currency", null)
                        .WithMany("CurrencyParities")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.District", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Product", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductAdvertisingSpace", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductAdvertisingSpaceLocationDiscount", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.ProductAdvertisingSpace", null)
                        .WithMany("ProductAdvertisingSpaceLocationDiscounts")
                        .HasForeignKey("ProductAdvertisingSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductAdvertisingSpaceVolumeDiscount", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.ProductAdvertisingSpace", null)
                        .WithMany("ProductAdvertisingSpaceVolumeDiscounts")
                        .HasForeignKey("ProductAdvertisingSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductEdition", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductLocationDiscount", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Product", null)
                        .WithMany("ProductLocationDiscounts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductVolumeDiscount", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Product", null)
                        .WithMany("ProductVolumeDiscounts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.PublishingOrder", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.AdvertisingSpaceLocationType", "AdvertisingSpaceLocationType")
                        .WithMany()
                        .HasForeignKey("AdvertisingSpaceLocationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.Contract", "Contract")
                        .WithMany("PublishingOrders")
                        .HasForeignKey("ContractId");

                    b.HasOne("LadeviVentasApi.Models.Domain.ProductAdvertisingSpace", "ProductAdvertisingSpace")
                        .WithMany()
                        .HasForeignKey("ProductAdvertisingSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.ProductEdition", "ProductEdition")
                        .WithMany("PublishingOrders")
                        .HasForeignKey("ProductEditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.ApplicationUser", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.SoldSpace", "SoldSpace")
                        .WithMany()
                        .HasForeignKey("SoldSpaceId");

                    b.Navigation("AdvertisingSpaceLocationType");

                    b.Navigation("Client");

                    b.Navigation("Contract");

                    b.Navigation("ProductAdvertisingSpace");

                    b.Navigation("ProductEdition");

                    b.Navigation("Seller");

                    b.Navigation("SoldSpace");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.SoldSpace", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.AdvertisingSpaceLocationType", "AdvertisingSpaceLocationType")
                        .WithMany()
                        .HasForeignKey("AdvertisingSpaceLocationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.Contract", "Contract")
                        .WithMany("SoldSpaces")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LadeviVentasApi.Models.Domain.ProductAdvertisingSpace", "ProductAdvertisingSpace")
                        .WithMany()
                        .HasForeignKey("ProductAdvertisingSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdvertisingSpaceLocationType");

                    b.Navigation("Contract");

                    b.Navigation("ProductAdvertisingSpace");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.State", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.TaxType", b =>
                {
                    b.HasOne("LadeviVentasApi.Models.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Contract", b =>
                {
                    b.Navigation("CheckPayments");

                    b.Navigation("ContractHistoricals");

                    b.Navigation("PublishingOrders");

                    b.Navigation("SoldSpaces");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Currency", b =>
                {
                    b.Navigation("CurrencyParities");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.Product", b =>
                {
                    b.Navigation("ProductLocationDiscounts");

                    b.Navigation("ProductVolumeDiscounts");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductAdvertisingSpace", b =>
                {
                    b.Navigation("ProductAdvertisingSpaceLocationDiscounts");

                    b.Navigation("ProductAdvertisingSpaceVolumeDiscounts");
                });

            modelBuilder.Entity("LadeviVentasApi.Models.Domain.ProductEdition", b =>
                {
                    b.Navigation("PublishingOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
